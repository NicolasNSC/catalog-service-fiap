basePath: /
definitions:
  dto.InputCreateVehicleDTO:
    properties:
      brand:
        type: string
      color:
        type: string
      model:
        type: string
      price:
        type: number
      year:
        type: integer
    type: object
  dto.InputUpdateVehicleDTO:
    properties:
      brand:
        type: string
      color:
        type: string
      model:
        type: string
      price:
        type: number
      year:
        type: integer
    type: object
  dto.OutputCreateVehicleDTO:
    properties:
      created_at:
        type: string
      id:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a vehicle catalog management.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Catalog Service FIAP
  version: "1.0"
paths:
  /vehicles/{id}:
    put:
      consumes:
      - application/json
      description: Updates the data of a vehicle identified by its ID
      parameters:
      - description: Vehicle ID
        in: path
        name: id
        required: true
        type: string
      - description: Vehicle data to update
        in: body
        name: vehicle
        required: true
        schema:
          $ref: '#/definitions/dto.InputUpdateVehicleDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid request body or ID
          schema:
            type: string
        "404":
          description: Vehicle not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update an existing vehicle
      tags:
      - Vehicles
  /vehicles/add:
    post:
      consumes:
      - application/json
      description: Adds a new vehicle to the catalog
      parameters:
      - description: Vehicle data to create
        in: body
        name: vehicle
        required: true
        schema:
          $ref: '#/definitions/dto.InputCreateVehicleDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.OutputCreateVehicleDTO'
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Failed to create vehicle
          schema:
            type: string
      summary: Create a new vehicle
      tags:
      - Vehicles
swagger: "2.0"
