// Code generated by MockGen. DO NOT EDIT.
// Source: showcase_client.go
//
// Generated by this command:
//
//	mockgen -source=showcase_client.go -destination=./mocks/showcase_client_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	dto "github.com/NicolasNSC/catalog-service-fiap/internal/dto"
	gomock "go.uber.org/mock/gomock"
)

// MockShowcaseClientInterface is a mock of ShowcaseClientInterface interface.
type MockShowcaseClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockShowcaseClientInterfaceMockRecorder
	isgomock struct{}
}

// MockShowcaseClientInterfaceMockRecorder is the mock recorder for MockShowcaseClientInterface.
type MockShowcaseClientInterfaceMockRecorder struct {
	mock *MockShowcaseClientInterface
}

// NewMockShowcaseClientInterface creates a new mock instance.
func NewMockShowcaseClientInterface(ctrl *gomock.Controller) *MockShowcaseClientInterface {
	mock := &MockShowcaseClientInterface{ctrl: ctrl}
	mock.recorder = &MockShowcaseClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShowcaseClientInterface) EXPECT() *MockShowcaseClientInterfaceMockRecorder {
	return m.recorder
}

// CreateListing mocks base method.
func (m *MockShowcaseClientInterface) CreateListing(ctx context.Context, data dto.CreateListingDTO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateListing", ctx, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateListing indicates an expected call of CreateListing.
func (mr *MockShowcaseClientInterfaceMockRecorder) CreateListing(ctx, data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateListing", reflect.TypeOf((*MockShowcaseClientInterface)(nil).CreateListing), ctx, data)
}

// UpdateListing mocks base method.
func (m *MockShowcaseClientInterface) UpdateListing(ctx context.Context, vehicleID string, data dto.UpdateListingDTO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateListing", ctx, vehicleID, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateListing indicates an expected call of UpdateListing.
func (mr *MockShowcaseClientInterfaceMockRecorder) UpdateListing(ctx, vehicleID, data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateListing", reflect.TypeOf((*MockShowcaseClientInterface)(nil).UpdateListing), ctx, vehicleID, data)
}
